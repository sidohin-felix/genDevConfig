# This file is used by $genDevConfig/util/genDevConfig v.3.0
#
# Place this file in the SNMPbooster configuration directory
# 
# Note: 
# Each trigger can only be associated with a service that collects the DSs used by the
# trigger or trigger group.
#
# Time based calculations are not required due to built-in Shinken processing for
# flapping, retries, soft/hard states.
# Time shifting, long term calculations and comparisons should be handled by a
# check plugin against the Graphite databases.

# For more information on genDevConfig: www.acktomic.com/
# For more information on triggers: www.shinken-monitoring.org/wiki/snmpBooster_triggers
# For more information on SNMPbooster: www.shinken-monitoring.org/wiki/snmpBooster

[TRIGGER]
# Set service to UNKNOWN(3) by default
    default_status = 3
    

    # Expressions are evaluated like a stack. 
    # Each datasource can be modified by applying a function to it in a Pythonic way. 
    # Operators are stacked in reverse Polish Notation
    # Functions are applied to variables as in python
    # Trigger alert on true expression

    [[interface_status]]
        critical = ifAdminStatus.last(),1,eq,ifOperStatus.last(),1,ne,and_
        
    [[interface_in]]
        warning = ifInOctets.prct(),80,gt,ifAdminStatus.last(),1,eq,ifOperStatus.last(),1,eq,and_,and_
        critical = ifInOctets.prct(),90,gt,ifOperStatus.last(),1,eq,and_
    [[interface_out]]
        warning = ifOutOctets.prct(),80,gt,ifAdminStatus.last(),1,eq,ifOperStatus.last(),1,eq,and_,and_
        critical = ifOutOctets.prct(),90,gt,ifOperStatus.last(),1,eq,and_
        
    [[interface-hc_in]]
        warning = ifHCInOctets.prct(),80,gt,ifAdminStatus.last(),1,eq,ifOperStatus.last(),1,eq,and_,and_
        critical = ifHCInOctets.prct(),90,gt,ifOperStatus.last(),1,eq,and_ 
    [[interface-hc_out]]
        warning = ifHCOutOctets.prct(),80,gt,ifAdminStatus.last(),1,eq,ifOperStatus.last(),1,eq,and_,and_
        critical = ifHCOutOctets.prct(),90,gt,ifOperStatus.last(),1,eq,and_

    [[interface-nu-hc_in]]
        warning = ifHCInMulticastPkts.last(),2000,gt,ifAdminStatus.last(),1,eq,ifOperStatus.last(),1,eq,and_,and_
        critical = ifHCInMulticastPkts.last(),5000,gt,ifOperStatus.last(),1,eq,and_
    [[interface-nu-hc_out]]
        warning = ifHCOutMulticastPkts.last(),2000,gt,ifAdminStatus.last(),1,eq,ifOperStatus.last(),1,eq,and_,and_
        critical = ifHCOutMulticastPkts.last(),5000,gt,ifOperStatus.last(),1,eq,and_
        
    [[file]]
        warning = FileSize.last(),1,gt
        critical = FileSize.last(),10,gt
        
    [[chassis_IOS_cpu]]
        warning = cpu5min.last(),85,gt
        critical = cpu5min.last(),95,gt
        
    [[chassis_IOS_mem]]
        warning = mem5minUsed.last(),processorRam.last(),div,100,mul,85,gt
        critical = mem5minUsed.last(),processorRam.last(),div,100,mul,95,gt
    
    [[saa_rtt]]
        warning = rrtMonLatestOperSense.last(),2,eq,rttMonLatestRttOperCompletionTime.last(),200,gt, or_
        critical = rttMonLatestRttOperCompletionTime.last(),400,gt

    [[number_of_routes]]
        warning = inetCidrRouteNumber.last(),500,lt
        
    [[number_of_spfruns]]
        warning = ospfSpfRuns.last(),3,gt
        critical = ospfSpfRuns.last(),10,gt
        
    [[chassis_uptime]]
        warning        = sysUptime, 100, *, 1800, lt
        
[TRIGGERGROUP]
    interface-BS-nu-hc = interface-nu-hc_out,interface-nu-hc_in,interface_status
    interface = interface_out,interface_in
    interface-hc = interface-hc_out,interface-hc_in,interface_status
    interface-nu-hc = interface-nu-hc_out,interface-nu-hc_in,interface_status
    interface-noql = interface_out,interface_in
    interface-noql-hc = interface-hc_out,interface-hc_in,interface_status
    interface-noql-nu-hc = interface-nu-hc_out,interface-nu-hc_in,interface_status
    file = file
    chassis_IOS = chassis_cpu,chassis_mem
    saa = saa_rtt
    routes = number_of_routes
    ospf = number_of_spfruns
    uptime = chassis_uptime
